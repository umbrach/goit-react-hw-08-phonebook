{"version":3,"file":"static/js/148.e1dd90b4.chunk.js","mappings":"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","sources":["views/ContactsPage/ContactsPage.styled.jsx","redux/selectors.js","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","views/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`;\n\nexport const ContactList = styled.ul`\n  list-style: none;\n`;\n","export const getConacts = state => state.contacts.users;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilterValue = state => state.filter.filter;\n","import styled from 'styled-components';\n\nexport const MyForm = styled.form`\n  & input {\n    /* position: relative;\n    border-radius: 10px;\n    height: 20px;\n    border: 1px dashed black;\n    padding-left: 20px; */\n  }\n`;\n","import { Report } from 'notiflix/build/notiflix-report-aio';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getConacts } from 'redux/selectors';\nimport { addContactThunk } from 'redux/contacts/thunk.users';\nimport { MyForm } from './Form.styled';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nconst { useState } = require('react');\n\nconst Form = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contactsFromState = useSelector(getConacts);\n\n  const stateMap = {\n    name: setName,\n    number: setNumber,\n  };\n\n  const handleAddContact = event => {\n    const { name } = event.target;\n    stateMap[name](event.target.value);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = {};\n    contact.name = name;\n    contact.number = number;\n\n    const findedContact = contact.name.toLowerCase();\n    if (\n      contactsFromState.find(contact =>\n        contact.name.toLowerCase().includes(findedContact)\n      )\n    ) {\n      Report.failure(`${contact.name} is already in contacts`);\n    } else {\n      dispatch(addContactThunk(contact));\n    }\n    reset();\n  };\n\n  return (\n    <MyForm onSubmit={handleSubmit}>\n      <TextField\n        id=\"outlined-required\"\n        type=\"text\"\n        name=\"name\"\n        label=\"Name\"\n        value={name}\n        onChange={handleAddContact}\n        size=\"small\"\n        inputProps={{\n          pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        }}\n        helperText=\"Name may contain only letters\"\n        required\n      ></TextField>\n      <br />\n\n      <TextField\n        id=\"outlined-number\"\n        type=\"tel\"\n        name=\"number\"\n        label=\"Number\"\n        value={number}\n        onChange={handleAddContact}\n        inputProps={{\n          inputMode: 'numeric',\n          pattern: '[0-9, +, -]*',\n        }}\n        size=\"small\"\n        helperText=\"Number may contain only digit\"\n        required\n      />\n\n      <br />\n      <br />\n      <Button variant=\"contained\" type=\"submit\">\n        Add Contact\n      </Button>\n      <br />\n      <br />\n    </MyForm>\n  );\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\n// import { Button } from './Contacts.styled';\nimport { useDispatch } from 'react-redux';\nimport { getConacts, getFilterValue } from 'redux/selectors';\nimport ListItem from '@mui/material/ListItem';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getUsersThunk, deleteContactsThunk } from 'redux/contacts/thunk.users';\nimport Button from '@mui/material/Button';\n\nconst Contacts = ({ options }) => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilterValue);\n\n  useEffect(() => {\n    dispatch(getUsersThunk({}));\n  }, [dispatch]);\n  const contactsFromState = useSelector(getConacts);\n\n  const getVisibleContacts = () => {\n    const normalaziedFilter = filter?.toLowerCase();\n    return contactsFromState?.filter(contact =>\n      contact.name.toLowerCase().includes(normalaziedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  const handleDeleteContact = e => {\n    // dispatch(deleteUserAction(e.target.id));\n    dispatch(deleteContactsThunk(e.target.id));\n  };\n  return (\n    <>\n      {visibleContacts?.map(visibleContact => (\n        <ListItem\n          dense\n          sx={{\n            width: '100%',\n            bgcolor: 'background.paper',\n            display: 'flex',\n            justifyContent: 'center',\n            gap: '10px',\n          }}\n          key={visibleContact.id}\n          className=\"list__item\"\n        >\n          <span>{visibleContact.name} </span>\n          <br />\n          <span>{visibleContact.number}</span>\n          <Button\n            variant=\"outlined\"\n            type=\"button\"\n            id={visibleContact.id}\n            onClick={handleDeleteContact}\n            size=\"small\"\n          >\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </>\n  );\n};\n\nContacts.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  // onClick: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import { useDispatch } from 'react-redux';\nimport { findUserAction } from 'redux/filter/slice';\nimport TextField from '@mui/material/TextField';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleChangeFilter = event => {\n    dispatch(findUserAction(event.target.value));\n  };\n  return (\n    <>\n      <TextField\n        type=\"text\"\n        label=\"Enter contact name\"\n        onChange={handleChangeFilter}\n        size=\"small\"\n        id=\"outlined-required\"\n        helperText=\"Find contact by Name\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n\n","import { Container } from './ContactsPage.styled';\nimport Form from '../../components/Form/Form';\nimport Contacts from '../../components/Contacts/Contacts';\nimport Filter from '../../components/Filter/Filter';\nimport List from '@mui/material/List';\n\nconst ContactsPage = () => {\n  return (\n    <Container>\n      <h2>Phonebook</h2>\n      <Form />\n      <Filter />\n      <h2>Contacts</h2>\n      <List>\n        <Contacts />\n      </List>\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Container","styled","getConacts","state","contacts","users","getFilterValue","filter","MyForm","useState","require","onSubmit","name","setName","number","setNumber","dispatch","useDispatch","contactsFromState","useSelector","stateMap","handleAddContact","event","target","value","preventDefault","contact","findedContact","toLowerCase","find","includes","Report","addContactThunk","TextField","id","type","label","onChange","size","inputProps","pattern","helperText","required","inputMode","Button","variant","options","useEffect","getUsersThunk","visibleContacts","normalaziedFilter","getVisibleContacts","handleDeleteContact","e","deleteContactsThunk","map","visibleContact","ListItem","dense","sx","width","bgcolor","display","justifyContent","gap","className","onClick","findUserAction","List"],"sourceRoot":""}