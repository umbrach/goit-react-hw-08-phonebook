{"version":3,"file":"static/js/11.373857f8.chunk.js","mappings":"0PAEMA,E,QAAeC,GAAAA,IAAH,6F,6BC2FlB,EArFqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAcD,OACE,UAACb,EAAD,YACE,2CACA,kBAAMc,SAfW,SAAAC,GACnBA,EAAMC,iBACFP,EAASQ,OAAS,EACpBC,EAAAA,OAAAA,QAAe,mCAGjBhB,GAASiB,EAAAA,EAAAA,IAAS,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,IACb,EAKG,WACE,SAACU,EAAA,EAAD,CACEC,GAAG,oBACHC,KAAK,OACLjB,KAAK,OACLQ,MAAOR,EACPkB,MAAM,OACNC,SAAUb,EACVc,KAAK,QACLC,UAAQ,KAEV,mBACA,mBAEA,SAACN,EAAA,EAAD,CACEC,GAAG,mBACHC,KAAK,QACLjB,KAAK,QACLQ,MAAON,EACPgB,MAAM,QACNC,SAAUb,EACVc,KAAK,QACHE,QAAQ,yHACVD,UAAQ,KAEV,mBACA,mBACA,SAACN,EAAA,EAAD,CACEC,GAAG,0BACHE,MAAM,WACND,KAAK,WACLM,WAAW,gBACXC,aAAa,mBACbxB,KAAK,WACLQ,MAAOJ,EACPe,SAAUb,EACVc,KAAK,QACLE,QAAQ,yDACRD,UAAQ,KAGV,mBACA,mBACA,SAACI,EAAA,EAAD,CAAQC,QAAQ,YAAYT,KAAK,SAAjC,wBAMP,C","sources":["views/RegisterPage/RegisterPage.styled.jsx","views/RegisterPage/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst RegisterPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport { RegisterPage };\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operation';\nimport { Report } from 'notiflix';\nimport { RegisterPage } from './RegisterPage.styled';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (password.length < 7) {\n      Report.warning('Password must be min 7 symbols');\n      return;\n    }\n    dispatch(register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <RegisterPage>\n      <h1>Register page</h1>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          id=\"outlined-required\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          label=\"Name\"\n          onChange={handleChange}\n          size=\"small\"\n          required\n        ></TextField>\n        <br />\n        <br />\n\n        <TextField\n          id=\"outline-required\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          label=\"email\"\n          onChange={handleChange}\n          size=\"small\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n        ></TextField>\n        <br />\n        <br />\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          helperText=\"Min 7 symbols\"\n          autoComplete=\"current-password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          size=\"small\"\n          pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^\\w\\s]).{7,}\"\n          required\n        />\n\n        <br />\n        <br />\n        <Button variant=\"contained\" type=\"submit\">\n          Login\n        </Button>\n      </form>\n    </RegisterPage>\n  );\n};\n\nexport default RegisterForm;\n"],"names":["RegisterPage","styled","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","event","preventDefault","length","Report","register","TextField","id","type","label","onChange","size","required","pattern","helperText","autoComplete","Button","variant"],"sourceRoot":""}