{"version":3,"file":"static/js/116.148f13fc.chunk.js","mappings":"iPAEMA,E,QAAYC,GAAAA,IAAH,6F,6BCsEf,EAhEkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EASD,OACE,UAACZ,EAAD,YACE,wCACA,kBAAMa,SAVW,SAAAC,GACnBA,EAAMC,iBACNb,GAASc,EAAAA,EAAAA,IAAM,CAAEX,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,GACb,EAKG,WACE,SAACS,EAAA,EAAD,CACEC,GAAG,oBACHC,MAAM,QACNC,KAAK,QACLT,KAAK,QACLC,MAAOP,EACPgB,SAAUZ,EACVa,KAAK,QAELC,UAAQ,KAEV,mBACA,mBAEA,SAACN,EAAA,EAAD,CACEC,GAAG,0BACHC,MAAM,WACNC,KAAK,WACLI,aAAa,mBACbb,KAAK,WACLC,MAAOL,EACPc,SAAUZ,EACVa,KAAK,QAELC,UAAQ,KAGV,mBACA,mBACA,SAACE,EAAA,EAAD,CAAQC,QAAQ,YAAYN,KAAK,SAAjC,yBAMP,C","sources":["views/LoginPage/LoginPage.styled.jsx","views/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst LoginPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport { LoginPage };\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { login } from 'redux/auth/auth-operation';\nimport { LoginPage } from './LoginPage.styled';\n\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(login({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <LoginPage>\n      <h1>Login page</h1>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          id=\"outlined-required\"\n          label=\"email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          size=\"small\"\n          //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n        ></TextField>\n        <br />\n        <br />\n\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          size=\"small\"\n          //   pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^\\w\\s]).{6,}\"\n          required\n        />\n\n        <br />\n        <br />\n        <Button variant=\"contained\" type=\"submit\">\n          Log in\n        </Button>\n      </form>\n    </LoginPage>\n  );\n};\n\nexport default LoginForm;\n"],"names":["LoginPage","styled","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","event","preventDefault","login","TextField","id","label","type","onChange","size","required","autoComplete","Button","variant"],"sourceRoot":""}